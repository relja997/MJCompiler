// generated with ast extension for cup
// version 0.8
// 22/5/2021 13:46:44


package rs.ac.bg.etf.pp1.ast;

public interface Visitor { 

    public void visit(Unmatched Unmatched);
    public void visit(DeclarationList DeclarationList);
    public void visit(ConstExtendNum ConstExtendNum);
    public void visit(Mulop Mulop);
    public void visit(MethodDecl MethodDecl);
    public void visit(Matched Matched);
    public void visit(Relop Relop);
    public void visit(MethodType MethodType);
    public void visit(OptFormPars OptFormPars);
    public void visit(OptExpression OptExpression);
    public void visit(OptArray OptArray);
    public void visit(ElseStmt ElseStmt);
    public void visit(StatementList StatementList);
    public void visit(VarExtend VarExtend);
    public void visit(OrOp OrOp);
    public void visit(Addop Addop);
    public void visit(OptionalParameters OptionalParameters);
    public void visit(Factor Factor);
    public void visit(CondTerm CondTerm);
    public void visit(OptAddopTerm OptAddopTerm);
    public void visit(OptMin OptMin);
    public void visit(Designator Designator);
    public void visit(OptElseStmt OptElseStmt);
    public void visit(OptExtends OptExtends);
    public void visit(OptMethodDecl OptMethodDecl);
    public void visit(Term Term);
    public void visit(ConstExtendChar ConstExtendChar);
    public void visit(Condition Condition);
    public void visit(IfHeader IfHeader);
    public void visit(ElsePart ElsePart);
    public void visit(VarDeclList VarDeclList);
    public void visit(Expr Expr);
    public void visit(Case Case);
    public void visit(Expr1 Expr1);
    public void visit(OptDes OptDes);
    public void visit(ActPars ActPars);
    public void visit(ThenStatement ThenStatement);
    public void visit(ConstExtendBool ConstExtendBool);
    public void visit(DesignatorStatement DesignatorStatement);
    public void visit(SingleDeclaration SingleDeclaration);
    public void visit(Statement Statement);
    public void visit(VarDecl VarDecl);
    public void visit(ClassDecl ClassDecl);
    public void visit(ConstDecl ConstDecl);
    public void visit(CondFact CondFact);
    public void visit(OptActPars OptActPars);
    public void visit(MethodDeclList MethodDeclList);
    public void visit(OptExpr OptExpr);
    public void visit(FormPars FormPars);
    public void visit(FormParam FormParam);
    public void visit(OptRelopExpr OptRelopExpr);
    public void visit(PrintExpr PrintExpr);
    public void visit(Cases Cases);
    public void visit(ModOperator ModOperator);
    public void visit(DivOperator DivOperator);
    public void visit(MulOperator MulOperator);
    public void visit(Minus Minus);
    public void visit(Plus Plus);
    public void visit(LessOrEqual LessOrEqual);
    public void visit(LessThan LessThan);
    public void visit(GreaterOrEqual GreaterOrEqual);
    public void visit(GreaterThan GreaterThan);
    public void visit(NotEqualTo NotEqualTo);
    public void visit(EqualTo EqualTo);
    public void visit(Assignop Assignop);
    public void visit(DesArrName DesArrName);
    public void visit(ArrayDesignator ArrayDesignator);
    public void visit(DotDesignator DotDesignator);
    public void visit(DesignatorDeclaration DesignatorDeclaration);
    public void visit(NoOptionalExpr NoOptionalExpr);
    public void visit(WithOptionalExpr WithOptionalExpr);
    public void visit(FactorExpr FactorExpr);
    public void visit(FactorNEW FactorNEW);
    public void visit(FactorBOOLC FactorBOOLC);
    public void visit(FactorCHARC FactorCHARC);
    public void visit(FactorNUMC FactorNUMC);
    public void visit(FactorWithoutArguments FactorWithoutArguments);
    public void visit(FactorWithActPars FactorWithActPars);
    public void visit(FactorDeclaration FactorDeclaration);
    public void visit(SingleFactor SingleFactor);
    public void visit(TermDecl TermDecl);
    public void visit(NoAddopTerm NoAddopTerm);
    public void visit(AddopTerm AddopTerm);
    public void visit(Expr1Positive Expr1Positive);
    public void visit(Expr1Negative Expr1Negative);
    public void visit(ExprAddopTerm ExprAddopTerm);
    public void visit(ExprDeclTernaryA ExprDeclTernaryA);
    public void visit(ExprDeclAddop ExprDeclAddop);
    public void visit(WithoutRelop WithoutRelop);
    public void visit(WithRelop WithRelop);
    public void visit(CondFactDecl CondFactDecl);
    public void visit(SingleCondFact SingleCondFact);
    public void visit(CondTermDecl CondTermDecl);
    public void visit(OrOperator OrOperator);
    public void visit(SingleCondTerm SingleCondTerm);
    public void visit(ConditionDecl ConditionDecl);
    public void visit(SingleActParameter SingleActParameter);
    public void visit(ActParameters ActParameters);
    public void visit(NoActPars NoActPars);
    public void visit(WithActPars WithActPars);
    public void visit(DesignatorDecrement DesignatorDecrement);
    public void visit(DesignatorIncrement DesignatorIncrement);
    public void visit(DesignatorOptActPars DesignatorOptActPars);
    public void visit(DesignatorAssign DesignatorAssign);
    public void visit(PrintExprWithOptional PrintExprWithOptional);
    public void visit(PrintExprOnly PrintExprOnly);
    public void visit(NoReturnExpression NoReturnExpression);
    public void visit(OptReturnExpression OptReturnExpression);
    public void visit(SwitchCase SwitchCase);
    public void visit(NoCases NoCases);
    public void visit(SwitchCases SwitchCases);
    public void visit(NoElseStatement NoElseStatement);
    public void visit(ElseStatement ElseStatement);
    public void visit(IfHeaderStatement IfHeaderStatement);
    public void visit(BlockOfStatements BlockOfStatements);
    public void visit(PrintStatement PrintStatement);
    public void visit(ReadStatement ReadStatement);
    public void visit(ReturnStatement ReturnStatement);
    public void visit(ContinueStatement ContinueStatement);
    public void visit(BreakStatement BreakStatement);
    public void visit(SwitchStatement SwitchStatement);
    public void visit(DoWhileStatement DoWhileStatement);
    public void visit(DesignatorAssignStatementError DesignatorAssignStatementError);
    public void visit(DesignatorStatmt DesignatorStatmt);
    public void visit(ThenStmt ThenStmt);
    public void visit(UnmatchedStmt UnmatchedStmt);
    public void visit(MatchedStmt MatchedStmt);
    public void visit(ElsePartStatement ElsePartStatement);
    public void visit(ElsePartOfIf ElsePartOfIf);
    public void visit(IfElseStatement IfElseStatement);
    public void visit(IfStatement IfStatement);
    public void visit(NoStatementList NoStatementList);
    public void visit(StatementLst StatementLst);
    public void visit(Type Type);
    public void visit(FormalParamDeclaration FormalParamDeclaration);
    public void visit(SingleFormalParam SingleFormalParam);
    public void visit(FormalParams FormalParams);
    public void visit(NoFormParams NoFormParams);
    public void visit(OptionalParams OptionalParams);
    public void visit(OtherMethod OtherMethod);
    public void visit(VoidMethod VoidMethod);
    public void visit(MethodTypeName MethodTypeName);
    public void visit(MethodDeclaration MethodDeclaration);
    public void visit(NoMethodDecl NoMethodDecl);
    public void visit(MethodDeclarationList MethodDeclarationList);
    public void visit(NoMethodDeclarations NoMethodDeclarations);
    public void visit(ClassMethodDeclarations ClassMethodDeclarations);
    public void visit(NoExtendsAttribute NoExtendsAttribute);
    public void visit(ExtendsAttribute ExtendsAttribute);
    public void visit(ClassDeclaration ClassDeclaration);
    public void visit(NoVarExtend NoVarExtend);
    public void visit(VarExtension VarExtension);
    public void visit(NoArrayBrackets NoArrayBrackets);
    public void visit(ArrayBrackets ArrayBrackets);
    public void visit(VarDeclError VarDeclError);
    public void visit(VarDeclaration VarDeclaration);
    public void visit(NoVarDeclList NoVarDeclList);
    public void visit(VarDeclaratList VarDeclaratList);
    public void visit(NoMoreCharConst NoMoreCharConst);
    public void visit(CharCDeclExtend CharCDeclExtend);
    public void visit(NoMoreBoolConst NoMoreBoolConst);
    public void visit(BoolCDeclExtend BoolCDeclExtend);
    public void visit(NoMoreNumConst NoMoreNumConst);
    public void visit(NumCDeclExtend NumCDeclExtend);
    public void visit(CharCDecl CharCDecl);
    public void visit(BoolCDecl BoolCDecl);
    public void visit(NumCDecl NumCDecl);
    public void visit(ClassDeclar ClassDeclar);
    public void visit(VarDeclarationList VarDeclarationList);
    public void visit(ConstDeclaration ConstDeclaration);
    public void visit(NoDeclarations NoDeclarations);
    public void visit(DeclList DeclList);
    public void visit(ProgName ProgName);
    public void visit(Program Program);

}
